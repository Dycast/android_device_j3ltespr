diff -ur a/build/core/tasks/kernel.mk b/build/core/tasks/kernel.mk
--- a/build/core/tasks/kernel.mk	2016-02-23 18:37:53.000000000 +0000
+++ b/build/core/tasks/kernel.mk	2016-02-23 19:00:48.000000000 +0000
@@ -202,7 +202,11 @@
     ccache := $(strip $(wildcard $(ccache)))
 endif
 
-KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ccache) $(KERNEL_TOOLCHAIN_PATH)"
+ifneq ($(TARGET_KERNEL_CUSTOM_TOOLCHAIN),)     
+    KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ccache) $(ANDROID_BUILD_TOP)/prebuilts/gcc/linux-x86/arm/$(TARGET_KERNEL_CUSTOM_TOOLCHAIN)/bin/arm-eabi-"      
+else
+	KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ccache) $(KERNEL_TOOLCHAIN_PATH)"
+endif
 ccache =
 
 define mv-modules
diff -ur a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java
--- a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java	Wed Apr 20 08:50:20 2016
+++ b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java	Thu May 12 01:31:40 2016
@@ -481,8 +481,18 @@
 
         Call call = CallsManager.getInstance().getForegroundCall();
         boolean setMsimAudioParams = SystemProperties.getBoolean("ro.multisim.set_audio_params", false);
+		boolean setSamsungRealcallParams = SystemProperties.getBoolean("ro.telephony.samsung.realcall", false);
 
         Log.v(this, "Request to change audio mode from %d to %d", oldMode, newMode);
+		
+		if(setSamsungRealcallParams) {
+            if(newMode == 0) {
+                mAudioManager.setParameters("realcall=off");
+            } else if(newMode == AudioManager.MODE_IN_COMMUNICATION || newMode == AudioManager.MODE_RINGTONE
+                || newMode == AudioManager.MODE_IN_CALL) {
+                    mAudioManager.setParameters("realcall=on");
+            }
+        }
 
         if (oldMode != newMode) {
             if (oldMode == AudioManager.MODE_IN_CALL && newMode == AudioManager.MODE_RINGTONE) {

diff -ur a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java
--- a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 20 17:28:46 2016
+++ b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 27 10:45:01 2016
@@ -930,6 +930,9 @@
                Log.d(LOGTAG, "Audio source set it as headset");
                AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
            }
+		   mAudioManager.setParameters("fm_mode=on");
+		   mAudioManager.setParameters("fm_radio_volume=on");
+		   mAudioManager.setParameters("FMRadioVol=0.1496235728");
+		   mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+          mAudioManager.setSpeakerphoneOn(false);
            AudioSystem.setDeviceConnectionState(AudioSystem.DEVICE_OUT_FM,
                                AudioSystem.DEVICE_STATE_AVAILABLE, "");
 
@@ -947,6 +950,8 @@
            stopA2dpPlayback();
        }else{
            Log.d(LOGTAG, "FMRadio: Requesting to stop FM");
+		   mAudioManager.setParameters("fm_mode=off");
+		   mAudioManager.setParameters("fm_radio_mute=1");
            AudioSystem.setDeviceConnectionState(AudioSystem.DEVICE_OUT_FM,
                                      AudioSystem.DEVICE_STATE_UNAVAILABLE, "");
        }
@@ -1168,6 +1173,7 @@
                if (audioManager != null) {
                    Log.d(LOGTAG, "Mute");
                    mMuted = true;
+				   audioManager.setParameters("fm_radio_mute=1");
                    audioManager.setStreamMute(AudioManager.STREAM_MUSIC,true);
                }
            }
@@ -2231,6 +2237,7 @@
       if (audioManager != null)
       {
          mMuted = true;
+		 audioManager.setParameters("fm_radio_mute=1");
          audioManager.setStreamMute(AudioManager.STREAM_MUSIC,true);
       }
       return bCommandSent;
@@ -2251,6 +2258,7 @@
       if (audioManager != null)
       {
          mMuted = false;
+		 audioManager.setParameters("fm_radio_mute=0");
          audioManager.setStreamMute(AudioManager.STREAM_MUSIC,false);
          if (mResumeAfterCall)
          {

